name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy-1-1-1-1:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/1.1.1.1
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-access:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/access
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-analytics:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/analytics
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-argo-tunnel:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/argo-tunnel
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-byoip:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/byoip
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-distributed-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/distributed-web
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-firewall:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/firewall
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-gateway:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/gateway
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-http3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/http3
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-images:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/images
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-internet:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/internet
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-load-balancing:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/load-balancing
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-logs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/logs
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-magic-transit:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/magic-transit
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-mobile-sdk:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/mobile-sdk
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-network-interconnect:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/network-interconnect
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-randomness-beacon:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/randomness-beacon
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-registrar:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/registrar
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-spectrum:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/spectrum
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-ssl:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/ssl
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-stream:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/stream
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-tenant:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/tenant
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/terraform
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-time-services:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/time-services
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-waf:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/waf
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  deploy-workers:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: products/workers
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run bootstrap
          npm run build
          npm install -g @cloudflare/wrangler
      - run: wrangler publish
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      - run: wrangler publish -e production
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
