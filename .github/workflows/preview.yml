name: Preview

on: pull_request

jobs:
  preview:
    name: Check preview label
    outputs:
      result: ${{ steps.step1.outputs.result || 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set env variable to true when label is present
        id: step1
        if: ${{ contains( github.event.pull_request.labels.*.name, 'preview' ) }}
        run: echo "::set-output name=result::true"

  changes:
    name: "Check for docs changes"
    needs: preview
    if: ${{ needs.preview.outputs.result == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      products: ${{ steps.filter.outputs.products }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.4.2
        id: filter
        with:
          list-files: shell
          filters: |
            products:
              - 'products/**'
      - run: echo ${{ steps.filter.outputs.products_files }}

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - name: Get PR number
        env:
          PRNUMBER: ${{ steps.filter.outputs.products == 'true' && format(github.event.number) || '0' }}
        run: echo "pr_number=${{ env.PRNUMBER }}" >> $GITHUB_ENV
      - name: Checkout changes
        if: ${{ env.pr_number != '0' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Checkout docs engine
        if: ${{ env.pr_number != '0' }}
        uses: actions/checkout@v2
        with:
          repository: 'cloudflare/cloudflare-docs-engine'
          path: 'engine'

      - name: Install docs engine
        if: ${{ env.pr_number != '0' }}
        run: |
          cd $GITHUB_WORKSPACE/engine
          npm link
      - name: Build updated docs
        if: ${{ env.pr_number != '0' }}
        run: |
          while read tile; do
            echo "Building $tile..."
            if [ $tile == "developers.cloudflare.com" ]; then
              pushd developers.cloudflare.com
              npm install
              npm run build
              popd
            else
              pushd products/$tile
              npm link cloudflare-docs-engine
              mkdir .docs
              npm run ghactionsbootstrap
              npm run build
              popd
            fi
          done < <(echo ${{ steps.filter.outputs.products_files }} | node ./get-products-from-file-paths.js)
        env:
          WORKERS_ENV: development
      
      - name: Publish preview
        if: ${{ env.pr_number != '0' }}
        run: |
          export WRANGLER_HOME="$HOME"
          mkdir -p "$HOME/.wrangler"
          chmod -R 770 "$HOME/.wrangler"
          export CF_API_TOKEN=${{ secrets.CF_API_TOKEN }}
          npm install "@cloudflare/wrangler" -g
          COPIED="false"
          while read tile; do 
            if [ $tile == "developers.cloudflare.com" ]; then
              pushd developers.cloudflare.com
              if [ $COPIED == "false" ]; then
                cp wrangler.toml ${GITHUB_WORKSPACE}/
                COPIED=true
              fi
              echo "
              [env.preview]
              name = \"pr-$prnumber\"
              type = \"webpack\"
              route = \"https://pr-$prnumber.cloudflare-docs.workers.dev/*\"
              account_id = \"b54f07a6c269ecca2fa60f1ae4920c99\"
              workers_dev = \"true\" " >> wrangler.toml 
              wrangler publish -e $ENVIRONMENT
              popd
            else
              pushd products/$tile
              if [ $COPIED == "false" ]; then
                cp wrangler.toml ${GITHUB_WORKSPACE}/
                COPIED=true
              fi
              echo "
              [env.preview]
              name = \"pr-$prnumber-$tile\"
              type = \"webpack\"
              account_id = \"b54f07a6c269ecca2fa60f1ae4920c99\"
              workers_dev = \"true\" " >> wrangler.toml 
              wrangler publish -e $ENVIRONMENT
              popd
            fi
          done < <(echo ${{ steps.filter.outputs.products_files }} | node ./get-products-from-file-paths.js)
          cd ${GITHUB_WORKSPACE}
          # iconv removes emoji in output; xargs does a trim
          echo "SUBDOMAIN=$(wrangler subdomain | iconv -c -f utf-8 -t ascii | xargs)" >> $GITHUB_ENV
        env:
          prnumber: ${{env.pr_number}}
          ENVIRONMENT: preview
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      - name: Build PR comment with URLs
        if: ${{ env.pr_number != '0' }}
        id: build-comment
        run: |
          BASE_URL=$(echo "https://pr-${PR}.${SUBDOMAIN}")        
          # %0A is escaped newline:
          # https://github.com/peter-evans/create-or-update-comment/issues/51
          MESSAGE="[Previewer] Preview up to commit \`${SHA::7}\` available at the following URIs:%0A"
          while read tile; do
            if [ $tile == "developers.cloudflare.com" ]; then
              CURR_URL=${BASE_URL}
              MESSAGE="${MESSAGE}- ${CURR_URL}%0A"
            else
              CURR_URL="https://pr-${PR}-${tile}.${SUBDOMAIN}"
              MESSAGE="${MESSAGE}- ${CURR_URL}/${tile}%0A"
            fi
          done < <(echo ${{ steps.filter.outputs.products_files }} | node ./get-products-from-file-paths.js)
          echo ::set-output name=body::$MESSAGE
        env:
          SUBDOMAIN: ${{ env.SUBDOMAIN }}
          PR: ${{ env.pr_number }}
          SHA: ${{ github.event.pull_request.head.sha }}

      - name: Find comment about preview
        if: ${{ env.pr_number != '0' }}
        uses: peter-evans/find-comment@v1
        id: find-comment
        with:
          issue-number: ${{ env.pr_number }}
          body-includes: "[Previewer]"

      - name: Create or update comment
        if: ${{ env.pr_number != '0' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ env.pr_number }}
          body: ${{ steps.build-comment.outputs.body }}
          edit-mode: replace