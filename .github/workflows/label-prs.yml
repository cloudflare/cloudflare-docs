name: Add PR labels

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  label_prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.1

      - name: Install Dependencies
        run: npm install @actions/core @actions/github

      - name: Add product labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node .github/workflow-scripts/label-products.js

      - name: Add PR size
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: '10'
          s_label: 'size/s'
          s_max_size: '100'
          m_label: 'size/m'
          m_max_size: '500'
          l_label: 'size/l'
          l_max_size: '1000'
          xl_label: 'size/xl'
        run: node .github/workflow-scripts/label-pr-size.js

  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: ðŸ”¸ Get Changed Files from Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # get file names and separate them with space ' '
          files=$(gh pr diff ${{ github.event.pull_request.number }} --name-only | xargs -I {} sh -c 'echo "./{}"' | tr '\n' ' ')
          echo "CHANGED_FILES=$files" >> "$GITHUB_ENV"          

      - name: ðŸ”¸ Output Changed Files
        run: echo ${{ env.CHANGED_FILES }}
          
      - name: Check for Spelling Errors for Changed Files
        id: codespell
        uses: codespell-project/actions-codespell@v1
        with:
          check_filenames: true
          skip: nothing
          path: ${{ env.CHANGED_FILES }}
          only_warn: 1

      - name: Extract Error Lines
        run: |
          error_lines=$(echo "${{ steps.codespell.outputs.codespell_output }}" | grep -e "^Error:" | awk '{$1=""; print $0}')
          echo "ERROR_LINES=$error_lines" >> "$GITHUB_ENV"

      - name: Log ERROR_LINES
        run: echo ${{ env.ERROR_LINES }}

      - name: Create Comment on PR with Spell Check Errors
        if: ${{ env.ERROR_LINES != '' }}
        uses: actions/github-script@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const errorLines = process.env.ERROR_LINES || "";
            const commentBody = `**Spell Check Errors:**
            
            ${errorLines}`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });