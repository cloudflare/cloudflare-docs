name: Style guide
on:
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Get and filter reviews
        id: get-and-filter-reviews
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get reviews and filter based on state and reviewer id
          reviews=$(gh pr view ${{ github.event.pull_request.number }} --json reviews -q '.reviews[] | select(.state == "COMMENTED" and .author.login == "github-actions")')
          
          echo $reviews

          # Create an array from the multi-line string
          IFS=$'\n' read -r -a reviews_array <<< "$reviews"

          # Print the array elements
          for review_id in "${reviews_array[@]}"; do
            echo "Review ID: $review_id"
          done

          echo "FILTERED_REVIEWS=$reviews_array" >> "$GITHUB_ENV"

      - name: Output Changed Files
        run: echo ${{ env.FILTERED_REVIEWS }}

      - name: Get Changed Files from Pull Request
        run: |
          # get file names and structure as JSON
          files=$(gh pr diff ${{ github.event.pull_request.number }} --name-only | grep -E "\.md$" | xargs -I {} echo "\"{}\"" | tr '\n' ',' | sed 's/,$/\n/' | awk '{print "["$0"]"}')

          echo "CHANGED_FILES=$files" >> "$GITHUB_ENV"

      - name: Output Changed Files
        run: echo ${{ env.CHANGED_FILES }}

      - name: Vale
        uses: errata-ai/vale-action@reviewdog
        if: ${{ !cancelled() && env.CHANGED_FILES != '' }}
        with:
          files: ${{ env.CHANGED_FILES }}
          filter_mode: diff_context
          reporter: github-pr-review