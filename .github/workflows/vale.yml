name: Style guide
on:
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  review-styles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Get and filter reviews
        id: get-and-filter-reviews
        run: |
          # Get reviews and filter based on state and reviewer id
          filtered_reviews=$(gh pr view --json reviews -q '.reviews[] | select(.state == "COMMENTED" and .user.id == "41898282")')
          echo "FILTERED_REVIEWS=$filtered_reviews" >> "$GITHUB_ENV"

      - name: Delete reviews
        if: ${{ env.FILTERED_REVIEWS != '' }}
        run: |
          # Loop through the filtered reviews and delete each one
          for review in ${{ env.FILTERED_REVIEWS }}; do
            review_id=$(echo "$review" | jq -r '.id')
            gh pr review -D "$review_id"
          done

      - name: Delete reviews based on criteria
        if: ${{ env.reviews != '' }}
        run: |
          REVIEWS=$(echo "${{ env.reviews }}" | jq -c 'select(.state == "COMMENTED" and .user.id == "41898282") | .id')
          
          if [ -n "$REVIEWS" ]; then
            for REVIEW_ID in $REVIEWS; do
              gh pr review delete --review $REVIEW_ID --number ${{ steps.pr.outputs.number }}
            done
          fi

      - name: Get Changed Files from Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # get file names and structure as JSON
          files=$(gh pr diff ${{ github.event.pull_request.number }} --name-only | grep -E "\.md$" | xargs -I {} echo "\"{}\"" | tr '\n' ',' | sed 's/,$/\n/' | awk '{print "["$0"]"}')

          echo "CHANGED_FILES=$files" >> "$GITHUB_ENV"

      - name: Output Changed Files
        run: echo ${{ env.CHANGED_FILES }}

      - name: Vale
        uses: errata-ai/vale-action@reviewdog
        if: ${{ !cancelled() && env.CHANGED_FILES != '' }}
        with:
          files: ${{ env.CHANGED_FILES }}
          filter_mode: diff_context
          reporter: github-pr-review