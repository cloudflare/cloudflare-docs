name: Label PR Size

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  label_pr_size:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Calculate PR size
        id: calculate_size
        run: |
          numFiles=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | wc -l)
          numChanges=$(git diff --numstat ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | awk '{ s += $1 + $2 } END { print s }')

          if [[ $numFiles -lt 5 && $numChanges -lt 10 ]]; then
            echo "sizeType=sizeXS"
          elif [[ $numFiles -lt 10 && $numChanges -lt 50 ]]; then
            echo "sizeType=sizeS"
          elif [[ $numFiles -lt 10 && $numChanges -lt 250 ]]; then
            echo "sizeType=sizeM"
          else
            echo "sizeType=sizeL"
          fi

      - name: Remove previous label
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const context = github.context;
            const octokit = new github.GitHub(context.token);

            const { data: labels } = await octokit.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const sizeLabels = labels.filter(label => label.name.startsWith("size"));

            if (sizeLabels.length > 0) {
              await Promise.all(sizeLabels.map(label => {
                return octokit.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  name: label.name
                });
              }));
            }

      - name: Apply size label to PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sizeType = "${{ steps.calculate_size.outputs.sizeType }}";
            const context = github.context;

            const octokit = new github.GitHub(context.token);
            octokit.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [sizeType]
            });
