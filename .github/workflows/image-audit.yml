name: File Check

on:
  pull_request:
    branches:
      - production
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  file-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Find Unused Files
        id: find-files
        run: |
          # Find all .png and .svg files, excluding those in the ./static directory
          FILES=$(find . -type f \( -name "*.png" -o -name "*.svg" \) -not -path "./static/*")
          
          # Check if files are referenced in any markdown file
          UNUSED_FILES=""
          for FILE in $FILES; do
            FILENAME=$(basename "$FILE")
            if ! grep -q -r -F --exclude-dir=.github "$FILENAME" --include="*.md" .; then
              UNUSED_FILES+="$FILE\n"
            fi
          done
          
          # If there are unused files, output them
          if [ -n "$UNUSED_FILES" ]; then
            echo "::set-output name=unused_files::$UNUSED_FILES"
          fi

      - name: Create Issue if Unused Files Found
        if: steps.find-files.outputs.unused_files
        env:
          UNUSED_FILES: ${{ steps.find-files.outputs.unused_files }}
        run: |
          # Create the issue and reference the unused_files variable
          echo "How to address this issue:\n1. Check each string using the Find/Replace within your local IDE.\n2. Remove the specified files.\n3. Create a PR with \"closes #${{ github.event.issue.number }}\" in the description.\n\n(if you remove images that are referenced, the Compiles step will actually fail because you'll be introducing broken links)\n\nThe following files are not referenced in any markdown file:\n${UNUSED_FILES}\n\n" > issue_body.txt
          curl --silent -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/your-username/your-repo/issues" \
            -d "{\"title\": \"Unused Files Found\", \"body\": \"$(cat issue_body.txt)\", \"assignees\": [\"kodster28\", \"haleycode\"]}"
