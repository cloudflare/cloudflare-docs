name: Build

on:
  - push

jobs:
  changes:
    name: "Check for docs changes"
    runs-on: ubuntu-latest
    outputs:
      onedot: ${{ steps.filter.outputs.onedot }}
      access: ${{ steps.filter.outputs.access }}
      analytics: ${{ steps.filter.outputs.analytics }}
      api: ${{ steps.filter.outputs.api }}
      argo-tunnel: ${{ steps.filter.outputs.argo-tunnel }}
      byoip: ${{ steps.filter.outputs.byoip }}
      distributed-web: ${{ steps.filter.outputs.distributed-web }}
      docs-engine: ${{ steps.filter.outputs.docs-engine }}
      events: ${{ steps.filter.outputs.events }}
      firewall: ${{ steps.filter.outputs.firewall }}
      gateway: ${{ steps.filter.outputs.gateway }}
      http3: ${{ steps.filter.outputs.http3 }}
      images: ${{ steps.filter.outputs.images }}
      internet: ${{ steps.filter.outputs.internet }}
      load-balancing: ${{ steps.filter.outputs.load-balancing }}
      logs: ${{ steps.filter.outputs.logs }}
      magic-transit: ${{ steps.filter.outputs.magic-transit }}
      mobile-sdk: ${{ steps.filter.outputs.mobile-sdk }}
      network-interconnect: ${{ steps.filter.outputs.network-interconnect }}
      randomness-beacon: ${{ steps.filter.outputs.randomness-beacon }}
      registrar: ${{ steps.filter.outputs.registrar }}
      spectrum: ${{ steps.filter.outputs.spectrum }}
      ssl: ${{ steps.filter.outputs.ssl }}
      stream: ${{ steps.filter.outputs.stream }}
      tenant: ${{ steps.filter.outputs.tenant }}
      terraform: ${{ steps.filter.outputs.terraform }}
      time-services: ${{ steps.filter.outputs.time-services }}
      waf: ${{ steps.filter.outputs.waf }}
      warp-client: ${{ steps.filter.outputs.warp-client }}
      workers: ${{ steps.filter.outputs.workers }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.4.2
        id: filter
        with:
          filters: |
            onedot:
              - 'products/1.1.1.1/**'
            access:
              - 'products/access/**'
            analytics:
              - 'products/analytics/**'
            api:
              - 'products/api/**'
            argo-tunnel:
              - 'products/argo-tunnel/**'
            byoip:
              - 'products/byoip/**'
            distributed-web:
              - 'products/distributed-web/**'
            docs-engine:
              - 'products/docs-engine/**'
            events:
              - 'products/events/**'
            firewall:
              - 'products/firewall/**'
            gateway:
              - 'products/gateway/**'
            http3:
              - 'products/http3/**'
            images:
              - 'products/images/**'
            internet:
              - 'products/internet/**'
            load-balancing:
              - 'products/load-balancing/**'
            logs:
              - 'products/logs/**'
            magic-transit:
              - 'products/magic-transit/**'
            mobile-sdk:
              - 'products/mobile-sdk/**'
            network-interconnect:
              - 'products/network-interconnect/**'
            randomness-beacon:
              - 'products/randomness-beacon/**'
            registrar:
              - 'products/registrar/**'
            spectrum:
              - 'products/spectrum/**'
            ssl:
              - 'products/ssl/**'
            stream:
              - 'products/stream/**'
            tenant:
              - 'products/tenant/**'
            terraform:
              - 'products/terraform/**'
            time-services:
              - 'products/time-services/**'
            waf:
              - 'products/waf/**'
            warp-client:
              - 'products/warp-client/**'
            workers:
              - 'products/workers/**'

  build-1-1-1-1:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.onedot == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/1.1.1.1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-access:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.access == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/access
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-analytics:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.analytics == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/analytics
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-api:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/api
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-argo-tunnel:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.argo-tunnel == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/argo-tunnel
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-byoip:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.byoip == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/byoip
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-distributed-web:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.distributed-web == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/distributed-web
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-docs-engine:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.docs-engine == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/docs-engine
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-events:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.events == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/events
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-firewall:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.firewall == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/firewall
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-gateway:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.gateway == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/gateway
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-http3:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.http3 == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/http3
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-images:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.images == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/images
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-internet:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.internet == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/internet
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-load-balancing:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.load-balancing == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/load-balancing
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-logs:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.logs == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/logs
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-magic-transit:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.magic-transit == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/magic-transit
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-mobile-sdk:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.mobile-sdk == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/mobile-sdk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-network-interconnect:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.network-interconnect == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/network-interconnect
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-randomness-beacon:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.randomness-beacon == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/randomness-beacon
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-registrar:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.registrar == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/registrar
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-spectrum:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.spectrum == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/spectrum
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-ssl:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.ssl == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/ssl
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-stream:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.stream == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/stream
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-tenant:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.tenant == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/tenant
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-terraform:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.terraform == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/terraform
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-time-services:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.time-services == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/time-services
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-waf:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.waf == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/waf
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-warp-client:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.warp-client == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/warp-client
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build

  build-workers:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.workers == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/workers
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build
