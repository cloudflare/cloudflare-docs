---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { Image } from "astro:assets";

import CursorDark from "~/assets/images/workers/ai/cursor-dark.png";
import CursorLight from "~/assets/images/workers/ai/cursor-light.png";
---

<StarlightPage frontmatter={{ title: "AI Assistant", tableOfContents: false }}>
	<section id="assistant-header">
		<div class="not-content">
			<Image
				src={CursorDark}
				alt="Cursor illustration"
				width="300"
				class="light:sl-hidden"
			/>
			<Image
				src={CursorLight}
				alt="Cursor illustration"
				width="300"
				class="dark:sl-hidden"
			/>
		</div>
		<div id="text">
			<h1>
				<div class="illustration"></div>
				Meet your AI assistant, Cursor
				<div class="alpha">AI Preview</div>
			</h1>
			<p>
				Cursor is an experimental AI assistant, trained to answer questions
				about Cloudflare's Developer Platform and powered by
				<a class="DocsMarkdown--link" href="/workers/">Cloudflare Workers</a> and
				<a class="DocsMarkdown--link" href="/vectorize/">Vectorize</a>. Cursor
				is here to help answer your Cloudflare Workers and Developer Platform
				questions, so ask away!
			</p>
			<aside class="DocsMarkdown--aside" role="note" data-type="warning">
				Cursor is an experimental AI preview, meaning that the answers provided
				are often incorrect, incomplete, or lacking in context. Be sure to
				double-check what Cursor recommends using the linked sources provided.
			</aside>
		</div>
	</section>

	<ul id="messages"></ul>

	<form id="ai-form">
		<input
			id="prompt"
			placeholder="How do Cloudflare Workers work?"
			minlength="8"
			maxlength="256"
		/>
		<button type="submit">→</button>
	</form>

	<small id="disclaimer">
		Use of Cloudflare Cursor is subject to the Cloudflare Website and Online
		Services <a href="https://www.cloudflare.com/website-terms/">Terms of Use</a
		>. Cursor uses artificial intelligence technology provided by OpenAI, LLC.
		You acknowledge and agree that (i) any information or inputs that you
		provide when using Cursor will be shared with OpenAI, LLC, subject to its <a
			href="https://openai.com/policies/terms-of-use">Terms of Use</a
		> and <a href="https://openai.com/policies/privacy-policy">Privacy Policy</a
		>, to generate Cursor output and (ii) the output generated by Cursor has not
		been verified by Cloudflare for accuracy and does not represent Cloudflare’s
		views.
	</small>
</StarlightPage>

<style is:inline>
	section#assistant-header {
		display: flex;
		align-items: center;
	}
	div.illustration {
		width: 1321px;
		padding-bottom: 25%;
		background-image: url("/cursor-light.png");
		background-size: contain;
		background-repeat: no-repeat;
	}
	[theme="dark"] div.illustration {
		background-image: url("/cursor-dark.png");
	}
	p.notice {
		padding: 8px 16px;
		font-size: 14px;
		border-radius: 5px;
		border: 1px solid #6ecce5;
		background-color: #e2f5fa;
		color: var(--blue-1);
	}
	.alpha {
		display: inline-block;
		vertical-align: super;
		margin-left: 4px;
		padding: 4px;
		border-radius: 5px;
		font-size: 12px;
		color: var(--indigo-2);
		background-color: var(--indigo-8);
		letter-spacing: 0;
	}
	section#assistant-header h1 {
		margin-bottom: 16px;
	}
	#assistant-header h1 div.illustration {
		display: none;
		margin-bottom: 16px;
		width: 40%;
	}
	section#assistant-header #text {
		margin-left: 32px;
	}
	small#disclaimer {
		display: block;
		line-height: 2;
		font-size: 12px;
		color: var(--gray-4);
		text-align: center;
		margin-top: 16px;
	}

	ul#messages {
		list-style: none;
		margin: 0;
		padding: 0;
		display: flex;
		flex-direction: column;
		margin-top: 32px;
		padding-top: 32px;
		border-top: 1px solid var(--gray-8);
	}
	[theme="dark"] ul#messages {
		border-top-color: var(--gray-1);
	}

	ul#messages > li {
		padding: 8px 16px;

		border-radius: 15px;
		margin: 0 0 32px 0;
		max-width: 800px;
	}

	ul#messages li.prompt {
		background-color: var(--sl-color-accent);
		box-shadow: 0 0 10px 5px rgba(var(--sl-color-accent), 0.15);
		color: white;
		margin-left: auto;
	}

	ul#messages li.response {
		background-color: var(--sl-color-bg-nav);
		margin-right: auto;
	}

	form#ai-form {
		margin-top: 16px;
		display: flex;
		align-items: center;
	}
	form#ai-form input {
		width: 100%;
		box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.05);
		border: none;
		border-radius: 15px;
		padding: 8px 16px;
		appearance: none;
		-webkit-appearance: none;
	}
	[theme="dark"] form#ai-form input {
		background-color: black;
		box-shadow: 0 0 10px 5px rgba(255, 255, 255, 0.05);
	}
	form#ai-form button {
		color: white;
		appearance: none;
		-webkit-appearance: none;
		border: none;
		background-color: var(--sl-color-accent);
		box-shadow: 0 0 10px 5px rgba(var(--sl-color-accent), 0.15);
		width: 32px;
		height: 32px;
		border-radius: 50%;
		margin-left: 16px;
		cursor: pointer;
		transition: box-shadow 500ms;
		font-weight: bold;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	form#ai-form button:hover {
		box-shadow: 0 0 15px 5px rgba(var(--sl-color-accent), 0.3);
	}

	@media screen and (max-width: 62em) {
		#assistant-header > div.illustration {
			display: none;
		}
		#assistant-header h1 div.illustration {
			display: block;
		}

		section#assistant-header #text {
			margin-left: 0;
		}
	}

	.loader {
		padding: 8px;
	}

	.dot-flashing {
		position: relative;
		width: 10px;
		height: 10px;
		border-radius: 5px;
		background-color: #ff6633;
		animation: dot-flashing 1s infinite linear alternate;
		animation-delay: 0.5s;
	}
	.dot-flashing::before,
	.dot-flashing::after {
		content: "";
		display: inline-block;
		position: absolute;
		top: 0;
	}
	.dot-flashing::before {
		left: -15px;
		width: 10px;
		height: 10px;
		border-radius: 5px;
		background-color: #ff6633;
		animation: dot-flashing 1s infinite alternate;
		animation-delay: 0s;
	}
	.dot-flashing::after {
		left: 15px;
		width: 10px;
		height: 10px;
		border-radius: 5px;
		background-color: #ff6633;
		animation: dot-flashing 1s infinite alternate;
		animation-delay: 1s;
	}

	@keyframes dot-flashing {
		0% {
			background-color: #ff6633;
		}
		50%,
		100% {
			background-color: #fbad41;
		}
	}
</style>

<script>
	import { marked } from "marked";
	import DOMPurify from "dompurify";

	const formEl = document.getElementById("ai-form") as HTMLFormElement;
	const promptEl = document.getElementById("prompt") as HTMLInputElement;
	const messagesEl = document.getElementById("messages") as HTMLUListElement;

	const sourceToUrl = (mdFilename: string) =>
		`https://developers.cloudflare.com/${mdFilename
			.replace(/_index\.md$/, "")
			.replace(/\.md$/, "")}`;

	formEl.addEventListener("submit", (e) => {
		e.preventDefault();
		e.stopPropagation();

		const prompt = promptEl.value;

		if (prompt.length < 8 || prompt.length > 256) return;

		promptEl.value = "";

		const messageEl = document.createElement("li");
		messageEl.setAttribute("class", "prompt");
		messageEl.innerText = prompt;

		messagesEl.appendChild(messageEl);

		const url = new URL("https://bot-api.developers.cloudflare.com/stream");
		url.searchParams.set("question", prompt);
		const source = new EventSource(url);

		let completion = "";
		let sources: string[] = [];

		const responseEl = document.createElement("li");
		responseEl.setAttribute("class", "response");

		const responseTextEl = document.createElement("p");
		responseEl.appendChild(responseTextEl);

		const sourcesEl = document.createElement("p");
		sourcesEl.style.display = "none";
		responseEl.appendChild(sourcesEl);

		const loadingEl = document.createElement("div");
		loadingEl.setAttribute("class", "loader");
		loadingEl.innerHTML = '<div class="dot-flashing"></div>';
		responseEl.appendChild(loadingEl);

		messagesEl.appendChild(responseEl);

		promptEl.setAttribute("disabled", "true");

		source.onerror = () => {
			// Errors within an EventSource are indiscernible — this could occur due to rate limits or issues with a prompt.
			// Let's fail gracefully and revert to default state.

			loadingEl.remove();
			promptEl.removeAttribute("disabled");

			responseTextEl.innerText =
				"I'm currently unable to answer this question. Please try rephrasing, or ask again at a later date.";

			source.close();
		};

		source.onmessage = ({ data }) => {
			if (data === "[DONE]") {
				source.close();

				promptEl.removeAttribute("disabled");

				return;
			}

			loadingEl.remove();

			const {
				choices: [{ text }],
			} = JSON.parse(data);
			completion += text;

			//const isCompleted = completion.indexOf("SOURCES:") > -1;

			const [answer, sourcesString] = completion.split("SOURCES:");

			responseTextEl.innerHTML = DOMPurify.sanitize(
				marked.parse(answer.trim()) as string,
			);

			if (sourcesString) {
				sourcesEl.style.display = "block";
				sources = sourcesString
					.trim()
					.split(", ")
					.map((s) => sourceToUrl(s))
					.filter((url) => url !== "https://developers.cloudflare.com/N/A");
			}

			sourcesEl.innerHTML = DOMPurify.sanitize(
				"These sources might provide additional context: <ul>" +
					sources
						.map((url) => `<li class="source"><a href="${url}">${url}</a></li>`)
						.join("") +
					"</ul>",
			);
		};
	});
</script>
