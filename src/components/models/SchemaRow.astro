---
import { Type } from "~/components";
import { type SchemaNode } from "@stoplight/json-schema-tree";

const { node } = Astro.props;
---

<li class="my-2 !list-none">
	<code class="mr-2 font-mono rounded-md bg-gray-100">
		{node.subpath[node.subpath.length - 1]}
	</code>
	{node.primaryType && <Type text={node.primaryType} />}

	{
		node.annotations.default && (
			<span class="text-xs mr-2">default {node.annotations.default}</span>
		)
	}
	{
		(node.validations.minLength !== undefined ||
			node.validations.minimum !== undefined) && (
			<span class="text-xs mr-2">
				min {node.validations.minLength || node.validations.minimum}
			</span>
		)
	}
	{
		(node.validations.maxLength !== undefined ||
			node.validations.maximum !== undefined) && (
			<span class="text-xs">
				max {node.validations.maxLength || node.validations.maximum}
			</span>
		)
	}
	<p>{node.annotations.description}</p>

	{
		node.children && (
			<ul class="!list-none m-0 p-0 ml-4">
				{node.children.map((node: SchemaNode) => (
					<Astro.self node={node} />
				))}
			</ul>
		)
	}
</li>
