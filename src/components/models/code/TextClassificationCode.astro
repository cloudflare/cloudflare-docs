---
import { z } from "astro:content";
import { Code, Details } from "~/components";

type Props = z.infer<typeof props>;

const props = z.object({
	name: z.string()
});

const { name } = props.parse(Astro.props);

const worker = `
export interface Env {
  AI: Ai;
}

export default {
  async fetch(request, env): Promise<Response> {

    const response = await env.AI.run(
      "${name}",
      {
        text: "This pizza is great!",
      }
    );

    return Response.json(response);
  },
} satisfies ExportedHandler<Env>;
`;

const python = `
API_BASE_URL = "https://api.cloudflare.com/client/v4/accounts/{ACCOUNT_ID}/ai/run/"
headers = {"Authorization": "Bearer {API_KEY}"}

def run(model, input):
    response = requests.post(f"{API_BASE_URL}{model}", headers=headers, json=input)
    return response.json()

output = run("${name}", { "text": "This pizza is great!" })
print(output)
`


const curl = `
curl https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/ai/run/${name}  \\
  -X POST  \\
  -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN"  \\
  -d '{ "text": "This pizza is great!" }'
`;
---

<h2>Code Examples</h2>
<Details header="Workers - Typescript">
  <Code code={worker} lang="ts" />
</Details>

<Details header="Python">
  <Code code={python} lang="py" />
</Details>

<Details header="curl">
  <Code code={curl} lang="sh" />
</Details>

