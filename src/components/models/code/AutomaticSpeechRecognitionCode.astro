---
import { z } from "astro:content";
import { Code } from "@astrojs/starlight/components";
import Details from "~/components/Details.astro";

type Props = z.infer<typeof props>;

const props = z.object({
	name: z.string(),
});

const { name } = props.parse(Astro.props);

const worker = `
export interface Env {
  AI: Ai;
}

export default {
  async fetch(request, env): Promise<Response> {
    const res = await fetch(
      "https://github.com/Azure-Samples/cognitive-services-speech-sdk/raw/master/samples/cpp/windows/console/samples/enrollment_audio_katie.wav"
    );
    const blob = await res.arrayBuffer();

    const input = {
      audio: [...new Uint8Array(blob)],
    };

    const response = await env.AI.run(
      "${name}",
      input
    );

    return Response.json({ input: { audio: [] }, response });
  },
} satisfies ExportedHandler<Env>;
`;

const curl = `
curl https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/ai/run/${name}  \\
  -X POST  \\
  -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN"  \\
  --data-binary "@talking-llama.mp3"
`;
---

<h2>Code Examples</h2>
<Details header="Workers - Typescript">
	<Code code={worker} lang="ts" />
</Details>

<Details header="curl">
	<Code code={curl} lang="sh" />
</Details>
