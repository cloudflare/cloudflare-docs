---
import { z } from "astro:content";
import { Code, Details } from "~/components";

type Props = z.infer<typeof props>;

const props = z.object({
	name: z.string()
});

const { name } = props.parse(Astro.props);

const worker = `
export interface Env {
  AI: Ai;
}


export default {
  async fetch(request: Request, env: Env): Promise<Response> {
    const res = await fetch("https://cataas.com/cat");
    const blob = await res.arrayBuffer();
    const input = {
      image: [...new Uint8Array(blob)],
      prompt: "Generate a caption for this image",
      max_tokens: 512,
    };
    const response = await env.AI.run(
      "${name}",
      input
      );
    return new Response(JSON.stringify(response));
  },
} satisfies ExportedHandler<Env>;
`;
---

<h2>Code Examples</h2>
<Details header="Workers - Typescript">
  <Code code={worker} lang="ts" />
</Details>

