---
import { getCollection, z } from "astro:content";
import AnchorHeading from "./AnchorHeading.astro";

type Props = z.infer<typeof props>;

const props = z.object({
	experimental: z.boolean().default(false),
});

const { experimental } = props.parse(Astro.props);

let flags = await getCollection("compatibility-dates");

if (experimental) {
	flags = flags.filter((x) => x.data.experimental);
}
---

{
	flags.map(async (entry) => {
		const { Content } = await entry.render();

		return (
			<>
				<AnchorHeading title={entry.data.name} depth={3} />
				<table>
					{entry.data.enable_date && (
						<tr>
							<td>
								<strong>Default as of</strong>
							</td>
							<td>{entry.data.enable_date}</td>
						</tr>
					)}
					{entry.data.enable_flag && (
						<tr>
							<td>
								<strong>Flag to enable</strong>
							</td>
							<td>
								<code>{entry.data.enable_flag}</code>
							</td>
						</tr>
					)}
					{entry.data.disable_flag && (
						<tr>
							<td>
								<strong>Flag to disable</strong>
							</td>
							<td>
								<code>{entry.data.disable_flag}</code>
							</td>
						</tr>
					)}
				</table>
				<Content />
			</>
		);
	})
}
