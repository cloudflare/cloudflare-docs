---
import type { Props } from "@astrojs/starlight/props";
import Default from "@astrojs/starlight/components/PageSidebar.astro";
import { slug } from "github-slugger"
import { getChangelogs } from "~/util/changelogs";

if (Astro.props.slug === "workers-ai/models") {
    const headings = [
        "Automatic Speech Recognition",
        "Image Classification",
        "Image-to-Text",
        "Object Detection",
        "Summarization",
        "Text Classification",
        "Text Embeddings",
        "Text Generation",
        "Text-to-Image",
        "Translation"
    ];

    for (const heading of headings) {
        Astro.props.toc?.items.push({
            text: heading,
            slug: slug(heading),
            depth: 2,
            children: []
        })
    }
}

if (Astro.props.entry.data.changelog_file_name || Astro.props.entry.data.changelog_product_area_name) {
    if (Astro.props.entry.data.changelog_product_area_name) {
        const name = Astro.props.entry.data.changelog_product_area_name;
        const { changelogs } = await getChangelogs((entry) => { return entry.data.productArea === name});

        const headings = Object.keys(Object.fromEntries(changelogs));

        for (const heading of headings) {
            Astro.props.toc?.items.push({
                text: heading,
                slug: slug(heading),
                depth: 2,
                children: []
            })
        }
    } else if (Astro.props.entry.data.changelog_file_name.length === 1) {
        const name = Astro.props.entry.data.changelog_file_name[0];
        const { changelogs } = await getChangelogs((entry) => { return entry.id === name});

        const headings = Object.keys(Object.fromEntries(changelogs));

        for (const heading of headings) {
            Astro.props.toc?.items.push({
                text: heading,
                slug: slug(heading),
                depth: 2,
                children: []
            })
        }
    }
}

---

<Default {...Astro.props}>
    <slot />
</Default>
