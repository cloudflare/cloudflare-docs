---
import { getEntry, z } from "astro:content";
import { marked } from "marked";
import { AnchorHeading, Details } from "~/components";

type Props = z.infer<typeof props>;

const props = z
	.object({
		product: z.string().optional(),
		notificationFilter: z.string().optional(),
	})
	.strict();

const { product, notificationFilter } = props.parse(Astro.props);

let notifications = (await getEntry("notifications", "index"))["data"][
	"entries"
];

if (product) {
	notifications = notifications.filter(
		(x) => x.associatedProducts.toLowerCase() === product.toLowerCase(),
	);
}

if (notificationFilter) {
	notifications = notifications.filter(
		(x) => x.name.toLowerCase() === notificationFilter.toLowerCase(),
	);
}

notifications = Object.groupBy(notifications, (entry) => entry.associatedProducts);

const showProductHeadings = !product && !notificationFilter;
---

{
    Object.entries(notifications).sort().map(([product, entries]) => (
        <>
        { showProductHeadings && <AnchorHeading depth={2} title={product} /> }
        {
            entries.map((notification) => (
                <Details header={notification.name}>
                    <strong>Who is it for?</strong>
                    <p set:html={marked.parse(notification.audience)}/>

                    <strong>Other options / filters</strong>
                    <p set:html={marked.parse(notification.otherFilters)}/>

                    <strong>Included with</strong>
                    <p set:html={marked.parse(notification.availability)}/>

                    <strong>What should you do if you receive one?</strong>
                    <p set:html={marked.parse(notification.nextSteps)}/>

                    {
                        notification.additional_information &&
                        <strong>Additional information</strong>
                        <p set:html={marked.parse(notification.additional_information)}/>
                    }

                    {
                        notification.limitations &&
                        <strong>Limitations</strong>
                        <p set:html={marked.parse(notification.limitations)}/>
                    }
                </Details>
            ))
        }
        </>
    ))
}
