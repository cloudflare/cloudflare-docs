---
import type { HTMLAttributes } from "astro/types";
import { Icon } from "~/components";

interface Props extends Omit<HTMLAttributes<"a">, "href"> {
	href: string | URL;
	icon?: keyof typeof Icons | undefined;
	iconPlacement?: "start" | "end" | undefined;
	variant?: "primary" | "secondary" | "minimal";
}

const {
	class: className,
	icon,
	iconPlacement = "end",
	variant = "primary",
	...attrs
} = Astro.props;
---

<a class:list={["sl-link-button not-content", variant, className]} {...attrs}>
	{icon && iconPlacement === "start" && <Icon name={icon} size="1.5rem" />}
	<slot />
	{icon && iconPlacement === "end" && <Icon name={icon} size="1.5rem" />}
</a>

<style>
	.sl-link-button {
		align-items: center;
		border-radius: 999rem;
		color: var(--sl-color-white);
		display: inline-flex;
		font-size: var(--sl-text-sm);
		gap: 0.5em;
		line-height: 1.7145;
		padding: 0.5rem 1.125rem;
		text-decoration: none;
	}

	.sl-link-button.primary {
		background: var(--sl-color-text-accent);
		border: 1px solid var(--sl-color-text-accent);
		color: var(--sl-color-black);
	}
	.sl-link-button.secondary {
		border: 1px solid;
	}
	.sl-link-button.minimal {
		outline-offset: 0.25rem;
		padding-inline: 0;
	}

	.sl-link-button :global(svg) {
		flex-shrink: 0;
	}

	@media (min-width: 50rem) {
		.sl-link-button {
			font-size: var(--sl-text-base);
			line-height: 1.5;
			/* padding: 1rem 1.25rem; */
		}
	}

	:global(.sl-markdown-content) .sl-link-button {
		margin-inline-end: 0.5em;
	}
	:global(.sl-markdown-content) .sl-link-button:not(:where(p *)) {
		margin-block: 1rem;
	}
</style>
